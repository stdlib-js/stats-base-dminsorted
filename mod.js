// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var r=function(){try{return e({},"x",{}),!0}catch(e){return!1}},t=Object.defineProperty,n=Object.prototype,a=n.toString,o=n.__defineGetter__,u=n.__defineSetter__,l=n.__lookupGetter__,i=n.__lookupSetter__;var c=t,_=function(e,r,t){var c,_,f,p;if("object"!=typeof e||null===e||"[object Array]"===a.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===a.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((_="value"in t)&&(l.call(e,r)||i.call(e,r)?(c=e.__proto__,e.__proto__=n,delete e[r],e[r]=t.value,e.__proto__=c):e[r]=t.value),f="get"in t,p="set"in t,_&&(f||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return f&&o&&o.call(e,r,t.get),p&&u&&u.call(e,r,t.set),e},f=r()?c:_;var p=function(e,r,t){f(e,r,{configurable:!1,enumerable:!1,writable:!1,value:t})};var b=function(e){return e!=e},v=Number.NEGATIVE_INFINITY;var y=function(e){return 0===e&&1/e===v};function d(e,r,t){var n,a;return e<=0?NaN:1===e||0===t?r[0]:(t<0?(n=r[(1-e)*t],a=r[0]):(n=r[0],a=r[(e-1)*t]),b(n)||b(a)?NaN:n===a?y(n)||y(a)?-0:n:n<a?n:a)}function s(e,r,t,n){var a,o;return e<=0?NaN:1===e||0===t?r[0]:(a=r[n],o=r[n+(e-1)*t],b(a)||b(o)?NaN:a===o?y(a)||y(o)?-0:a:a<o?a:o)}p(d,"ndarray",s);export{d as default,s as ndarray};
//# sourceMappingURL=mod.js.map
